// automatically generated by the FlatBuffers compiler, do not modify

import { LiveLogItem } from '../webmanager/live-log-item';
import { RequestJournal } from '../webmanager/request-journal';
import { RequestRestart } from '../webmanager/request-restart';
import { RequestSystemData } from '../webmanager/request-system-data';
import { RequestWifiAccesspoints } from '../webmanager/request-wifi-accesspoints';
import { RequestWifiConnect } from '../webmanager/request-wifi-connect';
import { RequestWifiDisconnect } from '../webmanager/request-wifi-disconnect';
import { ResponseJournal } from '../webmanager/response-journal';
import { ResponseSystemData } from '../webmanager/response-system-data';
import { ResponseWifiAccesspoints } from '../webmanager/response-wifi-accesspoints';
import { ResponseWifiConnectFailed } from '../webmanager/response-wifi-connect-failed';
import { ResponseWifiConnectSuccessful } from '../webmanager/response-wifi-connect-successful';
import { ResponseWifiDisconnect } from '../webmanager/response-wifi-disconnect';


export enum Message {
  NONE = 0,
  RequestWifiAccesspoints = 1,
  ResponseWifiAccesspoints = 2,
  RequestWifiConnect = 3,
  ResponseWifiConnectSuccessful = 4,
  ResponseWifiConnectFailed = 5,
  RequestWifiDisconnect = 6,
  ResponseWifiDisconnect = 7,
  RequestSystemData = 8,
  ResponseSystemData = 9,
  LiveLogItem = 10,
  RequestJournal = 11,
  ResponseJournal = 12,
  RequestRestart = 13
}

export function unionToMessage(
  type: Message,
  accessor: (obj:LiveLogItem|RequestJournal|RequestRestart|RequestSystemData|RequestWifiAccesspoints|RequestWifiConnect|RequestWifiDisconnect|ResponseJournal|ResponseSystemData|ResponseWifiAccesspoints|ResponseWifiConnectFailed|ResponseWifiConnectSuccessful|ResponseWifiDisconnect) => LiveLogItem|RequestJournal|RequestRestart|RequestSystemData|RequestWifiAccesspoints|RequestWifiConnect|RequestWifiDisconnect|ResponseJournal|ResponseSystemData|ResponseWifiAccesspoints|ResponseWifiConnectFailed|ResponseWifiConnectSuccessful|ResponseWifiDisconnect|null
): LiveLogItem|RequestJournal|RequestRestart|RequestSystemData|RequestWifiAccesspoints|RequestWifiConnect|RequestWifiDisconnect|ResponseJournal|ResponseSystemData|ResponseWifiAccesspoints|ResponseWifiConnectFailed|ResponseWifiConnectSuccessful|ResponseWifiDisconnect|null {
  switch(Message[type]) {
    case 'NONE': return null; 
    case 'RequestWifiAccesspoints': return accessor(new RequestWifiAccesspoints())! as RequestWifiAccesspoints;
    case 'ResponseWifiAccesspoints': return accessor(new ResponseWifiAccesspoints())! as ResponseWifiAccesspoints;
    case 'RequestWifiConnect': return accessor(new RequestWifiConnect())! as RequestWifiConnect;
    case 'ResponseWifiConnectSuccessful': return accessor(new ResponseWifiConnectSuccessful())! as ResponseWifiConnectSuccessful;
    case 'ResponseWifiConnectFailed': return accessor(new ResponseWifiConnectFailed())! as ResponseWifiConnectFailed;
    case 'RequestWifiDisconnect': return accessor(new RequestWifiDisconnect())! as RequestWifiDisconnect;
    case 'ResponseWifiDisconnect': return accessor(new ResponseWifiDisconnect())! as ResponseWifiDisconnect;
    case 'RequestSystemData': return accessor(new RequestSystemData())! as RequestSystemData;
    case 'ResponseSystemData': return accessor(new ResponseSystemData())! as ResponseSystemData;
    case 'LiveLogItem': return accessor(new LiveLogItem())! as LiveLogItem;
    case 'RequestJournal': return accessor(new RequestJournal())! as RequestJournal;
    case 'ResponseJournal': return accessor(new ResponseJournal())! as ResponseJournal;
    case 'RequestRestart': return accessor(new RequestRestart())! as RequestRestart;
    default: return null;
  }
}

export function unionListToMessage(
  type: Message, 
  accessor: (index: number, obj:LiveLogItem|RequestJournal|RequestRestart|RequestSystemData|RequestWifiAccesspoints|RequestWifiConnect|RequestWifiDisconnect|ResponseJournal|ResponseSystemData|ResponseWifiAccesspoints|ResponseWifiConnectFailed|ResponseWifiConnectSuccessful|ResponseWifiDisconnect) => LiveLogItem|RequestJournal|RequestRestart|RequestSystemData|RequestWifiAccesspoints|RequestWifiConnect|RequestWifiDisconnect|ResponseJournal|ResponseSystemData|ResponseWifiAccesspoints|ResponseWifiConnectFailed|ResponseWifiConnectSuccessful|ResponseWifiDisconnect|null, 
  index: number
): LiveLogItem|RequestJournal|RequestRestart|RequestSystemData|RequestWifiAccesspoints|RequestWifiConnect|RequestWifiDisconnect|ResponseJournal|ResponseSystemData|ResponseWifiAccesspoints|ResponseWifiConnectFailed|ResponseWifiConnectSuccessful|ResponseWifiDisconnect|null {
  switch(Message[type]) {
    case 'NONE': return null; 
    case 'RequestWifiAccesspoints': return accessor(index, new RequestWifiAccesspoints())! as RequestWifiAccesspoints;
    case 'ResponseWifiAccesspoints': return accessor(index, new ResponseWifiAccesspoints())! as ResponseWifiAccesspoints;
    case 'RequestWifiConnect': return accessor(index, new RequestWifiConnect())! as RequestWifiConnect;
    case 'ResponseWifiConnectSuccessful': return accessor(index, new ResponseWifiConnectSuccessful())! as ResponseWifiConnectSuccessful;
    case 'ResponseWifiConnectFailed': return accessor(index, new ResponseWifiConnectFailed())! as ResponseWifiConnectFailed;
    case 'RequestWifiDisconnect': return accessor(index, new RequestWifiDisconnect())! as RequestWifiDisconnect;
    case 'ResponseWifiDisconnect': return accessor(index, new ResponseWifiDisconnect())! as ResponseWifiDisconnect;
    case 'RequestSystemData': return accessor(index, new RequestSystemData())! as RequestSystemData;
    case 'ResponseSystemData': return accessor(index, new ResponseSystemData())! as ResponseSystemData;
    case 'LiveLogItem': return accessor(index, new LiveLogItem())! as LiveLogItem;
    case 'RequestJournal': return accessor(index, new RequestJournal())! as RequestJournal;
    case 'ResponseJournal': return accessor(index, new ResponseJournal())! as ResponseJournal;
    case 'RequestRestart': return accessor(index, new RequestRestart())! as RequestRestart;
    default: return null;
  }
}
